<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.scau.myteam.mapper.TaskMapper">
  <resultMap id="BaseResultMap" type="cn.scau.myteam.pojo.Task">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ppid" jdbcType="INTEGER" property="ppid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="endTime" jdbcType="TIMESTAMP" property="endTime" />
    <result column="setRepeat" jdbcType="VARCHAR" property="setRepeat" />
    <result column="setRemind" jdbcType="VARCHAR" property="setRemind" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="priority" jdbcType="VARCHAR" property="priority" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="isFinished" jdbcType="VARCHAR" property="isFinished" />
    <result column="record" jdbcType="VARCHAR" property="record" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ppid, uid, createTime, endTime, setRepeat, setRemind, content, remark, priority, 
    label, isFinished, record
  </sql>
  <select id="selectByExample" parameterType="cn.scau.myteam.pojo.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.scau.myteam.pojo.Task" useGeneratedKeys="true">
    insert into task (ppid, uid, createTime, 
      endTime, setRepeat, setRemind, 
      content, remark, priority, 
      label, isFinished, record
      )
    values (#{ppid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{setRepeat,jdbcType=VARCHAR}, #{setRemind,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{priority,jdbcType=VARCHAR}, 
      #{label,jdbcType=VARCHAR}, #{isFinished,jdbcType=VARCHAR}, #{record,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.scau.myteam.pojo.Task" useGeneratedKeys="true">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ppid != null">
        ppid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="endTime != null">
        endTime,
      </if>
      <if test="setRepeat != null">
        setRepeat,
      </if>
      <if test="setRemind != null">
        setRemind,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="isFinished != null">
        isFinished,
      </if>
      <if test="record != null">
        record,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ppid != null">
        #{ppid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="setRepeat != null">
        #{setRepeat,jdbcType=VARCHAR},
      </if>
      <if test="setRemind != null">
        #{setRemind,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="isFinished != null">
        #{isFinished,jdbcType=VARCHAR},
      </if>
      <if test="record != null">
        #{record,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.scau.myteam.pojo.Task">
    update task
    <set>
      <if test="ppid != null">
        ppid = #{ppid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        endTime = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="setRepeat != null">
        setRepeat = #{setRepeat,jdbcType=VARCHAR},
      </if>
      <if test="setRemind != null">
        setRemind = #{setRemind,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="isFinished != null">
        isFinished = #{isFinished,jdbcType=VARCHAR},
      </if>
      <if test="record != null">
        record = #{record,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.scau.myteam.pojo.Task">
    update task
    set ppid = #{ppid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      endTime = #{endTime,jdbcType=TIMESTAMP},
      setRepeat = #{setRepeat,jdbcType=VARCHAR},
      setRemind = #{setRemind,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      isFinished = #{isFinished,jdbcType=VARCHAR},
      record = #{record,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>